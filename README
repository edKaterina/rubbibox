RTPlatform

Структура проекта
[/serverPush/functions]
├── serverPush
│   └── functions
│       └── index.js (функция отправки Push для "Cloud Functions")
[/src/app]
├── OtherPages (общие экраны)
│   ├── chat (встроенный мессенджер)
│   └── detail (детальное представление объявления с предложениями)
├── Tab_AllAd (вкладка "Все объявления")
│   ├── allAd ("Все объявления" отмеченные в разделе "Подписка")
│   └── subscription ("Подписка", отметка категорий для фильтрации "Все объявления")
├── Tab_MyAd (вкладка "Мои объявления")
│   ├── add-form ("Новое объявление", создание нового объявления)
│   └── myAd ("Мои объявления", показывает объявления созданные пользователем)
├── Tab_People (вкладка "Мастера")
│   ├── people-detail (просмотр профиля мастера)
│   ├── people-edit (раздел "Стать мастером", редактирование профиля мастера)
│   └── people-list (раздел "Мастера", показывает список мастеров)
├── Tab_Setting (вкладка "Настройки")
│   ├── notifications (Уведомления)
│   └── setting (Раздел "Настройки")
├── components (компоненты)
│   ├── form-upload (интерфейс загрузки фотографии)
│   ├── responses-list (отклики (предложения на объявление))
│   └── user-detail (компонент отображения имени пользователя по его id)
├── pipe (форматирование данных)
│   └── sort-notify (сортировка по дате уведомлений)
├── model (модели данных)
│   ├── ad-model (объявление)
│   ├── category-model (категория объявления)
│   ├── file-upload (загружаемый файл)
│   ├── message-model (сообщение в мессенджере)
│   ├── notify-model (уведомление)
│   ├── people-model (мастер)
│   └── response-model (предложение на объявление)
├── modules (модули)
│   └── core (общие функции)
├── services (сервисы)
│   ├── ad.service (объявления)
│   ├── auth (авторизация)
│   ├── category (категории)
│   ├── core (общие)
│   ├── master (мастера)
│   ├── notification (уведомления)
│   ├── response (предложения/отклики)
│   └── upload-file.service (функции загрузки файла)
└── tabs (контроллер вкладок ion-tabs)

=== Компоненты ===

== Ф.И.О. пользователя ==
Использование: 
<rtp-user-detail [idUser]="response.user"></rtp-user-detail>

Параметры:
idUser - идентификатор пользователя

== Загрузка фотографий ==
Использование:
<rtp-form-upload count=1 [(files)]="note.img"></rtp-form-upload>

Пример интеграции:
    <ion-item>
      <ion-label position="stacked">Фото
        <rtp-form-upload count=1 [(files)]="note.img"></rtp-form-upload>
      </ion-label>
    </ion-item>

Параметры:
count - количество допустимых фотографий
files - массив ссылок на фотографии

== Предложения (отклики) на объявление ==
Использование: 
<rtp-responses-list [id]="id"></rtp-responses-list>

Параметры:
id - идентификатор объявления